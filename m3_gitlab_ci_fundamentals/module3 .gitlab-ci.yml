image: node:20

stages:
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production tests

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/

variables:
  STAGING_DOMAIN: werdomajezba-staging.surge.sh
  PRODUCTION_DOMAIN: werdomajezba.surge.sh

build website:
  stage: build
  only:
    - main
    - develop
    - merge_requests
  script:
    - echo "$CI_COMMIT_SHORT_SHA"
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
    - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      - ./public 

test artifact:
  image: alpine
  stage: test
  only:
    - main
    - develop
    - merge_requests
  script:
    - grep -q "Gatsby" ./public/index.html

test website:
  stage: test
  only:
    - main
    - develop
    - merge_requests
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 2
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"

deploy review:
  stage: deploy review
  only:
    - merge_requests
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://werdomajezba-$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: stop review
  script:
    - npm install --global surge
    - surge --project ./public --domain werdomajezba-$CI_ENVIRONMENT_SLUG.surge.sh

stop review:
  stage: deploy review
  only:
    - merge_requests
  variables:
    GIT_STRATEGY: none
  script:
    - npm install --global surge
    - surge teardown werdomajezba-$CI_ENVIRONMENT_SLUG.surge.sh
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

deploy staging:
  stage: deploy staging
  environment:
    name: staging
    url: http://$STAGING_DOMAIN
  only:
    - main
  script:
    - npm install --global surge
    - surge --project ./public --domain $STAGING_DOMAIN

deploy website to surge:
  stage: deploy production
  environment:
    name: production
    url: http://$PRODUCTION_DOMAIN
  only:
    - main
  script:
    - npm install --global surge
    - surge --project ./public --domain $PRODUCTION_DOMAIN

production tests:
  image: alpine
  stage: production tests
  only:
    - main
  script:
    - apk update
    - apk add --no-cache curl
    - curl "https://$PRODUCTION_DOMAIN/" | grep -q "Gatsby"
    - curl "https://$PRODUCTION_DOMAIN/" | grep -q "$CI_COMMIT_SHORT_SHA"

  